<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-06-16T17:03:50+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Dev Diary</title><subtitle>기억보단 기록을 하고싶은...
</subtitle><author><name>LEE KANGWON</name><email>&lt;caias1018@gmail.com&gt;</email></author><entry><title type="html">논리연산자 활용</title><link href="http://localhost:4000/devlog/2019/06/14/logical-operator/" rel="alternate" type="text/html" title="논리연산자 활용" /><published>2019-06-14T00:00:00+09:00</published><updated>2019-06-14T00:00:00+09:00</updated><id>http://localhost:4000/devlog/2019/06/14/logical-operator</id><content type="html" xml:base="http://localhost:4000/devlog/2019/06/14/logical-operator/">&lt;blockquote class=&quot;lead&quot;&gt;
  &lt;p&gt;논리연산자&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#논리연산자란&quot; id=&quot;markdown-toc-논리연산자란&quot;&gt;논리연산자란?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#개요&quot; id=&quot;markdown-toc-개요&quot;&gt;개요&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#개선-예시1&quot; id=&quot;markdown-toc-개선-예시1&quot;&gt;개선 예시1&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#개선-예시2&quot; id=&quot;markdown-toc-개선-예시2&quot;&gt;개선 예시2&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;논리연산자란&quot;&gt;논리연산자란?&lt;/h2&gt;

&lt;table class=&quot;stretch-table&quot;&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;연산자&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;구문&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;AND(&amp;amp;&amp;amp;)&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;expr1 &amp;amp;&amp;amp; expr2&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;expr1을 true로 변환할 수 있는 경우 expr2을 반환하고, 그렇지 않으면 expr1을 반환합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;OR (&lt;code&gt;||&lt;/code&gt;)&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code&gt;expr1 || expr2&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;expr1을 true로 변환할 수 있으면 expr1을 반환하고, 그렇지 않으면 expr2를 반환합니다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;NOT (!)&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;!expr&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;단일 피연산자를 true로 변환할 수 있으면 false를 반환합니다. 그렇지 않으면 true를 반환합니다.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p class=&quot;faded&quot;&gt;출처:&lt;a href=&quot;https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Operators/%EB%85%BC%EB%A6%AC_%EC%97%B0%EC%82%B0%EC%9E%90(Logical_Operators)&quot;&gt;MDN&lt;/a&gt; - 논리연산자&lt;/p&gt;

&lt;h2 id=&quot;개요&quot;&gt;개요&lt;/h2&gt;

&lt;p&gt;논리연산자는 보통 Boolean값과 함께 쓰이며, Boolean값을 반환한다고만 알고있었고 단순히 1차원 적으로 논리연산자란 함수/변수/Value값에서 return된 Boolean값을 비교 해서 Boolean값을 Return한다 라고만 생각했다.&lt;/p&gt;

&lt;p&gt;그러나 &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; 와 &lt;code&gt;||&lt;/code&gt; 연산자는 그냥 &lt;strong&gt;피연산자중 하나의 값을 반환&lt;/strong&gt;하는것이었다.&lt;/p&gt;

&lt;h3 id=&quot;개선-예시1&quot;&gt;개선 예시1&lt;/h3&gt;
&lt;p&gt;실무중에 flag값이 true일때만 특정 함수를 실행하게 해야만 했던 상황이 있었고 예시로 아래와 비슷한 코드를 작성했다가 코드리뷰중에 논리연산자를 이용하여 축약형으로 쓸 수 있는 조언을 반영했다.&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Bad&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Good&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;개선-예시2&quot;&gt;개선 예시2&lt;/h3&gt;
&lt;p&gt;API호출후에 받는 Data값이 Null 인경우를 체크해야 하는 상황이였다.&lt;br /&gt;
Null로 호출 되는 경우에는 Default Value값을 대신 넣어줘야 했고,
이부분 역시 곧이 곧대로 그냥 Null값만 체크를 하는 소스를 작성했었다.&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//Data Example&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;Data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Bad&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dataCheck&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;default value&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Good&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;datacheck&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;default value&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이 부분은 특정 Null값만 체크를 하는것 보다는 False로 체크 되는 부분을 일괄적으로 체크할수 있는 &lt;code&gt;||&lt;/code&gt; 연산자를 이용하여 축약했다. Data의 값이 Null이 아니라 다른 False값으로 변경이 되도 수정할 일이 없어서 이런 방식이 더 좋은 듯 하다.&lt;/p&gt;

&lt;p&gt;그렇다면, 추가적으로 기본 Boolean값이 False값을 갖는 것들이 어떤것들이 있는지 알아봤다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;NaN&lt;/li&gt;
  &lt;li&gt;Null&lt;/li&gt;
  &lt;li&gt;0&lt;/li&gt;
  &lt;li&gt;’’ , [], {} (비어있는 String, Array, Object)&lt;/li&gt;
  &lt;li&gt;Undefined&lt;/li&gt;
&lt;/ul&gt;</content><author><name>LEE KANGWON</name><email>&lt;caias1018@gmail.com&gt;</email></author><category term="Javascript" /><summary type="html">논리연산자</summary></entry></feed>